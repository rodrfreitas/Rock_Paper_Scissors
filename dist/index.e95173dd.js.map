{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/modules/Game.js","src/js/modules/Player.js","src/js/modules/ComputerPlayer.js"],"sourcesContent":["class $ed8917d366278864$export$2616165974278734 {\n    constructor(name){\n        // Define properties\n        this.name = name;\n        this.score = 0;\n        this.choice = null;\n    }\n    chooseAction(action) {\n        this.choice = action;\n    }\n}\n\n\n\n// Get cpu-selected-hand-text element\nconst $1aff82e60401c9e4$var$cpuSelectedhandMsg = document.getElementById(\"cpu-selected-hand-text\");\n// Get computer hand image element\nconst $1aff82e60401c9e4$var$cpuHandImg = document.getElementById(\"cpu-hand-img\");\nclass $1aff82e60401c9e4$export$9e9f75da6ccd8cee extends (0, $ed8917d366278864$export$2616165974278734) {\n    constructor(){\n        super(\"Computer\");\n    }\n    chooseAction() {\n        const gestures = [\n            \"rock\",\n            \"paper\",\n            \"scissors\"\n        ];\n        const randomIndex = Math.floor(Math.random() * gestures.length);\n        this.choice = gestures[randomIndex];\n        // Update player hand\n        const imagePath = `images/cpu_${this.choice}.svg`;\n        $1aff82e60401c9e4$var$cpuHandImg.setAttribute(\"src\", imagePath);\n        // Reset player hand image position\n        gsap.set($1aff82e60401c9e4$var$cpuHandImg, {\n            x: 170\n        });\n        gsap.to($1aff82e60401c9e4$var$cpuHandImg, {\n            duration: 0.4,\n            x: 0,\n            opacity: 1,\n            ease: \"bounce.out\",\n            onComplete: ()=>{\n                gsap.to($1aff82e60401c9e4$var$cpuHandImg, {\n                    duration: 0.5,\n                    x: 0,\n                    opacity: 1,\n                    ease: \"bounce.out\"\n                }); // Play animation again\n            }\n        });\n        $1aff82e60401c9e4$var$cpuSelectedhandMsg.innerText = this.choice;\n        console.log(\"Computer choose:\", this.choice);\n    }\n}\n\n\nclass $3809207e76fef3dc$export$985739bfa5723e08 {\n    constructor(rounds){\n        this.player = new (0, $ed8917d366278864$export$2616165974278734)(\"Player 1\");\n        this.computerPlayer = new (0, $1aff82e60401c9e4$export$9e9f75da6ccd8cee)();\n        this.rounds = rounds;\n        this.currentRound = 1;\n    }\n    playRound(playerChoice) {\n        this.player.chooseAction(playerChoice);\n        this.computerPlayer.chooseAction();\n        this.currentRound++;\n        // Store player and computer choices\n        const playerAction = this.player.choice;\n        const computerAction = this.computerPlayer.choice;\n        // Get the round result msg element\n        const roundResultMsg = document.getElementById(\"round-result-msg\");\n        // Compare and check who is the winner\n        if (playerAction === computerAction) {\n            //They chose the same action. so it's a tie\n            console.log(\"It's a tie\");\n            roundResultMsg.innerText = \"It's a tie. Try again!\";\n        } else if (playerAction === \"rock\" && computerAction === \"scissors\" || playerAction === \"paper\" && computerAction === \"rock\" || playerAction === \"scissors\" && computerAction === \"paper\") {\n            // Player wins the round\n            console.log(\"Player wins the round!\");\n            roundResultMsg.innerText = \"You win the round!\";\n            this.player.score++;\n        } else {\n            // Computer wins the round\n            console.log(\"Computer wins the round!\");\n            roundResultMsg.innerText = \"Computer wins the round!\";\n            this.computerPlayer.score++;\n        }\n    }\n    updateScores() {\n        // Update front-end\n        document.getElementById(\"current-player-score\").innerText = this.player.score;\n        document.getElementById(\"current-cpu-score\").innerText = this.computerPlayer.score;\n        document.getElementById(\"current-round\").innerText = this.currentRound;\n        // Get the round result msg element\n        const gameResultMsg = document.getElementById(\"game-result-msg\");\n        // Game result text animation\n        gsap.to(gameResultMsg, {\n            duration: 0.5,\n            opacity: 0,\n            yoyo: true,\n            repeat: 2,\n            onComplete: ()=>{\n                gsap.to(gameResultMsg, {\n                    duration: 0,\n                    opacity: 1\n                });\n            }\n        });\n        // Restart Button element\n        const restartButton = document.getElementById(\"restart-button\");\n        // Check for the winner after each round\n        if (this.player.score === 2) {\n            console.log(\"Player wins the best of three game!\");\n            gameResultMsg.innerText = \"You win the best of three game!\";\n            this.showRestartButton(restartButton);\n        } else if (this.computerPlayer.score === 2) {\n            console.log(\"Computer wins the best of three game!\");\n            gameResultMsg.innerText = \"Computer wins the best of three game!\";\n            this.showRestartButton(restartButton);\n        }\n    }\n    showRestartButton(button) {\n        button.style.display = \"block\";\n        button.addEventListener(\"click\", this.restartGame);\n    }\n    hideRestartButton(button) {\n        button.style.display = \"none\";\n        button.removeEventListener(\"click\", this.restartGame);\n    }\n    restartGame() {\n        location.reload(); // Reload the page\n    }\n}\n\n\n// create a best of three game\nconst $54b47fc030b7b21e$var$game = new (0, $3809207e76fef3dc$export$985739bfa5723e08)(3);\n// Game starts at Round 1\ndocument.getElementById(\"current-round\").innerText = 1;\n// Get player-selected-hand-text element\nconst $54b47fc030b7b21e$var$playerSelectedhandMsg = document.getElementById(\"player-selected-hand-text\");\n// Get player hand image element\nconst $54b47fc030b7b21e$var$playerHandImg = document.getElementById(\"player-hand-img\");\n// Test player choice\nfunction $54b47fc030b7b21e$var$testPlayerAction(event) {\n    console.log(\"Action Clicked\");\n    const selectedPlayerChoices = event.target.closest(\".player-choices\");\n    // Check for null\n    if (selectedPlayerChoices) {\n        const playerChoice = selectedPlayerChoices.dataset.action;\n        console.log(playerChoice);\n        if ($54b47fc030b7b21e$var$game.player.score === 2 || $54b47fc030b7b21e$var$game.computerPlayer.score === 2) {\n            console.log(\"Game over - Please press Restart Game Button\");\n            return;\n        }\n        // check the player click\n        if (playerChoice && [\n            \"rock\",\n            \"paper\",\n            \"scissors\"\n        ].includes(playerChoice)) {\n            console.log(\"Player choose:\", playerChoice);\n            $54b47fc030b7b21e$var$playerSelectedhandMsg.innerText = playerChoice;\n            // Update player hand\n            const imagePath = `images/ply_${playerChoice.toLowerCase()}.svg`;\n            $54b47fc030b7b21e$var$playerHandImg.setAttribute(\"src\", imagePath);\n            // Player hand animatiom\n            gsap.set($54b47fc030b7b21e$var$playerHandImg, {\n                x: -170\n            });\n            gsap.to($54b47fc030b7b21e$var$playerHandImg, {\n                duration: 0.4,\n                x: 0,\n                opacity: 1,\n                ease: \"bounce.out\",\n                onComplete: ()=>{\n                    gsap.to($54b47fc030b7b21e$var$playerHandImg, {\n                        duration: 0.5,\n                        x: 0,\n                        opacity: 1,\n                        ease: \"bounce.out\"\n                    }); // Play animation again\n                }\n            });\n            $54b47fc030b7b21e$var$game.playRound(playerChoice.toLowerCase());\n            $54b47fc030b7b21e$var$game.updateScores();\n        }\n    }\n}\n// Event listener\nconst $54b47fc030b7b21e$var$playerOptionsControls = document.getElementById(\"player-options\");\n$54b47fc030b7b21e$var$playerOptionsControls.addEventListener(\"click\", $54b47fc030b7b21e$var$testPlayerAction);\n\n\n//# sourceMappingURL=index.e95173dd.js.map\n","import { Game } from \"./modules/Game.js\";\r\n\r\n// create a best of three game\r\nconst game = new Game(3);\r\n\r\n// Game starts at Round 1\r\ndocument.getElementById(\"current-round\").innerText = 1;\r\n\r\n// Get player-selected-hand-text element\r\nconst playerSelectedhandMsg = document.getElementById(\"player-selected-hand-text\");\r\n\r\n// Get player hand image element\r\nconst playerHandImg = document.getElementById(\"player-hand-img\");\r\n\r\n// Test player choice\r\nfunction testPlayerAction(event) {\r\n    console.log(\"Action Clicked\");\r\n\r\n    const selectedPlayerChoices = event.target.closest(\".player-choices\");\r\n\r\n    // Check for null\r\n    if (selectedPlayerChoices) {\r\n        const playerChoice = selectedPlayerChoices.dataset.action;\r\n        console.log(playerChoice);\r\n\r\n        if (game.player.score === 2 || game.computerPlayer.score === 2) {\r\n            console.log(\"Game over - Please press Restart Game Button\");\r\n            return;\r\n        }\r\n\r\n        // check the player click\r\n        if (playerChoice && [\"rock\", \"paper\", \"scissors\"].includes(playerChoice)) {\r\n            console.log(\"Player choose:\", playerChoice);\r\n            playerSelectedhandMsg.innerText = playerChoice;\r\n\r\n            // Update player hand\r\n            const imagePath = `images/ply_${playerChoice.toLowerCase()}.svg`;\r\n            playerHandImg.setAttribute(\"src\", imagePath);\r\n\r\n            // Player hand animatiom\r\n            gsap.set(playerHandImg, { x: -170 });\r\n\r\n            gsap.to(playerHandImg, {\r\n                duration: 0.4,\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"bounce.out\",\r\n                onComplete: () => {\r\n                    gsap.to(playerHandImg, { duration: 0.5, x: 0, opacity: 1, ease: \"bounce.out\" }); // Play animation again\r\n                }\r\n            });\r\n\r\n            game.playRound(playerChoice.toLowerCase());\r\n            game.updateScores();\r\n        }\r\n    }\r\n}\r\n\r\n// Event listener\r\nconst playerOptionsControls = document.getElementById(\"player-options\");\r\nplayerOptionsControls.addEventListener(\"click\", testPlayerAction);","import { Player } from \"./Player.js\";\r\nimport { ComputerPlayer } from \"./ComputerPlayer.js\";\r\n\r\nexport class Game {\r\n\r\n    constructor(rounds) {\r\n        this.player = new Player(\"Player 1\");\r\n        this.computerPlayer = new ComputerPlayer();\r\n        this.rounds = rounds;\r\n        this.currentRound = 1;\r\n    }\r\n\r\n    playRound(playerChoice) {\r\n        this.player.chooseAction(playerChoice);\r\n        this.computerPlayer.chooseAction();\r\n        this.currentRound++;\r\n\r\n        // Store player and computer choices\r\n        const playerAction = this.player.choice;\r\n        const computerAction = this.computerPlayer.choice;\r\n        // Get the round result msg element\r\n        const roundResultMsg = document.getElementById(\"round-result-msg\");\r\n\r\n        // Compare and check who is the winner\r\n\r\n        if(playerAction === computerAction) {\r\n            //They chose the same action. so it's a tie\r\n            console.log(\"It's a tie\");\r\n            roundResultMsg.innerText = \"It's a tie. Try again!\";\r\n        } else if(\r\n            (playerAction === \"rock\" && computerAction === \"scissors\") ||\r\n            (playerAction === \"paper\" && computerAction === \"rock\") ||\r\n            (playerAction === \"scissors\" && computerAction === \"paper\")\r\n        ) {\r\n            // Player wins the round\r\n            console.log(\"Player wins the round!\");\r\n            roundResultMsg.innerText = \"You win the round!\";\r\n            this.player.score++;\r\n        } else {\r\n            // Computer wins the round\r\n            console.log(\"Computer wins the round!\");\r\n            roundResultMsg.innerText = \"Computer wins the round!\";\r\n            this.computerPlayer.score++;\r\n        }\r\n    }\r\n\r\n    updateScores() {\r\n        // Update front-end\r\n        document.getElementById(\"current-player-score\").innerText = this.player.score;\r\n        document.getElementById(\"current-cpu-score\").innerText = this.computerPlayer.score;\r\n        document.getElementById(\"current-round\").innerText = this.currentRound;\r\n\r\n        // Get the round result msg element\r\n        const gameResultMsg = document.getElementById(\"game-result-msg\");\r\n\r\n        // Game result text animation\r\n        gsap.to(gameResultMsg, {\r\n            duration: 0.5,\r\n            opacity: 0,\r\n            yoyo: true, \r\n            repeat: 2, \r\n            onComplete: () => {\r\n                gsap.to(gameResultMsg, { duration: 0, opacity: 1 });\r\n            }\r\n        });\r\n\r\n        // Restart Button element\r\n        const restartButton = document.getElementById(\"restart-button\");\r\n\r\n        // Check for the winner after each round\r\n        if (this.player.score === 2) {\r\n            console.log(\"Player wins the best of three game!\");\r\n            gameResultMsg.innerText = \"You win the best of three game!\";\r\n            this.showRestartButton(restartButton);\r\n         } else if (this.computerPlayer.score === 2) {\r\n            console.log(\"Computer wins the best of three game!\");\r\n            gameResultMsg.innerText = \"Computer wins the best of three game!\";\r\n            this.showRestartButton(restartButton);\r\n        } \r\n    }\r\n\r\n    showRestartButton(button) {\r\n        button.style.display = \"block\";\r\n        button.addEventListener(\"click\", this.restartGame);\r\n    }\r\n    \r\n    hideRestartButton(button) {\r\n        button.style.display = \"none\";\r\n        button.removeEventListener(\"click\", this.restartGame);\r\n    }\r\n\r\n    restartGame() {\r\n        location.reload(); // Reload the page\r\n    }\r\n}","export class Player {\r\n    \r\n    constructor(name) {\r\n        // Define properties\r\n        this.name = name;\r\n        this.score = 0;\r\n        this.choice = null;\r\n    }\r\n\r\n    chooseAction(action) {\r\n        this.choice = action;\r\n    }\r\n\r\n}\r\n","import { Player } from \"./Player.js\";\r\n\r\n// Get cpu-selected-hand-text element\r\nconst cpuSelectedhandMsg = document.getElementById(\"cpu-selected-hand-text\");\r\n\r\n// Get computer hand image element\r\nconst cpuHandImg = document.getElementById(\"cpu-hand-img\");\r\n\r\nexport class ComputerPlayer extends Player {\r\n    constructor() {\r\n        super(\"Computer\");\r\n    }\r\n    chooseAction() {\r\n        const gestures = [\"rock\", \"paper\", \"scissors\"];\r\n        const randomIndex = Math.floor(Math.random() * gestures.length);\r\n        this.choice = gestures[randomIndex];\r\n\r\n        // Update player hand\r\n        const imagePath = `images/cpu_${this.choice}.svg`;\r\n        cpuHandImg.setAttribute(\"src\", imagePath);\r\n\r\n        // Reset player hand image position\r\n\t\tgsap.set(cpuHandImg, { x: 170 });\r\n\r\n\t\tgsap.to(cpuHandImg, {\r\n            duration: 0.4,\r\n            x: 0,\r\n            opacity: 1,\r\n            ease: \"bounce.out\",\r\n            onComplete: () => {\r\n                gsap.to(cpuHandImg, { duration: 0.5, x: 0, opacity: 1, ease: \"bounce.out\" }); // Play animation again\r\n            }\r\n        });\r\n\r\n        cpuSelectedhandMsg.innerText = this.choice;\r\n        console.log(\"Computer choose:\", this.choice);\r\n    }\r\n}\r\n\r\n\r\n"],"names":["$ed8917d366278864$export$2616165974278734","constructor","name","score","choice","chooseAction","action","$1aff82e60401c9e4$var$cpuSelectedhandMsg","document","getElementById","$1aff82e60401c9e4$var$cpuHandImg","$1aff82e60401c9e4$export$9e9f75da6ccd8cee","gestures","randomIndex","Math","floor","random","length","imagePath","setAttribute","gsap","set","x","to","duration","opacity","ease","onComplete","innerText","console","log","$54b47fc030b7b21e$var$game","rounds","player","computerPlayer","currentRound","playRound","playerChoice","playerAction","computerAction","roundResultMsg","updateScores","gameResultMsg","yoyo","repeat","restartButton","showRestartButton","button","style","display","addEventListener","restartGame","hideRestartButton","removeEventListener","location","reload","$54b47fc030b7b21e$var$playerSelectedhandMsg","$54b47fc030b7b21e$var$playerHandImg","$54b47fc030b7b21e$var$playerOptionsControls","event","selectedPlayerChoices","target","closest","dataset","includes","toLowerCase"],"version":3,"file":"index.e95173dd.js.map"}